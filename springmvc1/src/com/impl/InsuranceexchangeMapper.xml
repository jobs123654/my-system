<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.InsuranceexchangeMapper">
  
  <resultMap id="BaseResultMap" type="com.entity.Insuranceexchange">
  
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="createTime" jdbcType="VARCHAR" property="createtime" />
    <result column="enjoyBirthday" jdbcType="VARCHAR" property="enjoybirthday" />
    <result column="enjoyCardNumber" jdbcType="VARCHAR" property="enjoycardnumber" />
    <result column="enjoyCardType" jdbcType="VARCHAR" property="enjoycardtype" />
    <result column="enjoyEmail" jdbcType="VARCHAR" property="enjoyemail" />
    <result column="enjoyLink" jdbcType="VARCHAR" property="enjoylink" />
    <result column="enjoyName" jdbcType="VARCHAR" property="enjoyname" />
    <result column="enjoyNumber" jdbcType="VARCHAR" property="enjoynumber" />
    <result column="enjoySex" jdbcType="INTEGER" property="enjoysex" />
    <result column="orderBirthday" jdbcType="VARCHAR" property="orderbirthday" />
    <result column="orderCardNumber" jdbcType="VARCHAR" property="ordercardnumber" />
    <result column="orderCardType" jdbcType="VARCHAR" property="ordercardtype" />
    <result column="orderEmail" jdbcType="VARCHAR" property="orderemail" />
    <result column="orderName" jdbcType="VARCHAR" property="ordername" />
    <result column="orderNumber" jdbcType="VARCHAR" property="ordernumber" />
    <result column="orderSex" jdbcType="INTEGER" property="ordersex" />
    <result column="useNumber" jdbcType="VARCHAR" property="usenumber" />
    <result column="xianEndDate" jdbcType="VARCHAR" property="xianenddate" />
    <result column="xianName" jdbcType="VARCHAR" property="xianname" />
    <result column="xianStartDate" jdbcType="VARCHAR" property="xianstartdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, createTime, enjoyBirthday, enjoyCardNumber, enjoyCardType, enjoyEmail, enjoyLink, 
    enjoyName, enjoyNumber, enjoySex, orderBirthday, orderCardNumber, orderCardType, 
    orderEmail, orderName, orderNumber, orderSex, useNumber, xianEndDate, xianName, xianStartDate
  </sql>
  <select id="selectByExample" parameterType="com.entity.InsuranceexchangeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    
    <include refid="Base_Column_List" />
    from insuranceexchange
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from insuranceexchange
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from insuranceexchange
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.entity.InsuranceexchangeExample">
    delete from insuranceexchange
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.entity.Insuranceexchange">
    insert into insuranceexchange (id, createTime, enjoyBirthday, 
      enjoyCardNumber, enjoyCardType, enjoyEmail, 
      enjoyLink, enjoyName, enjoyNumber, 
      enjoySex, orderBirthday, orderCardNumber, 
      orderCardType, orderEmail, orderName, 
      orderNumber, orderSex, useNumber, 
      xianEndDate, xianName, xianStartDate
      )
    values (#{id,jdbcType=INTEGER}, #{createtime,jdbcType=VARCHAR}, #{enjoybirthday,jdbcType=VARCHAR}, 
      #{enjoycardnumber,jdbcType=VARCHAR}, #{enjoycardtype,jdbcType=VARCHAR}, #{enjoyemail,jdbcType=VARCHAR}, 
      #{enjoylink,jdbcType=VARCHAR}, #{enjoyname,jdbcType=VARCHAR}, #{enjoynumber,jdbcType=VARCHAR}, 
      #{enjoysex,jdbcType=INTEGER}, #{orderbirthday,jdbcType=VARCHAR}, #{ordercardnumber,jdbcType=VARCHAR}, 
      #{ordercardtype,jdbcType=VARCHAR}, #{orderemail,jdbcType=VARCHAR}, #{ordername,jdbcType=VARCHAR}, 
      #{ordernumber,jdbcType=VARCHAR}, #{ordersex,jdbcType=INTEGER}, #{usenumber,jdbcType=VARCHAR}, 
      #{xianenddate,jdbcType=VARCHAR}, #{xianname,jdbcType=VARCHAR}, #{xianstartdate,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.entity.Insuranceexchange">
    insert into insuranceexchange
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="enjoybirthday != null">
        enjoyBirthday,
      </if>
      <if test="enjoycardnumber != null">
        enjoyCardNumber,
      </if>
      <if test="enjoycardtype != null">
        enjoyCardType,
      </if>
      <if test="enjoyemail != null">
        enjoyEmail,
      </if>
      <if test="enjoylink != null">
        enjoyLink,
      </if>
      <if test="enjoyname != null">
        enjoyName,
      </if>
      <if test="enjoynumber != null">
        enjoyNumber,
      </if>
      <if test="enjoysex != null">
        enjoySex,
      </if>
      <if test="orderbirthday != null">
        orderBirthday,
      </if>
      <if test="ordercardnumber != null">
        orderCardNumber,
      </if>
      <if test="ordercardtype != null">
        orderCardType,
      </if>
      <if test="orderemail != null">
        orderEmail,
      </if>
      <if test="ordername != null">
        orderName,
      </if>
      <if test="ordernumber != null">
        orderNumber,
      </if>
      <if test="ordersex != null">
        orderSex,
      </if>
      <if test="usenumber != null">
        useNumber,
      </if>
      <if test="xianenddate != null">
        xianEndDate,
      </if>
      <if test="xianname != null">
        xianName,
      </if>
      <if test="xianstartdate != null">
        xianStartDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="enjoybirthday != null">
        #{enjoybirthday,jdbcType=VARCHAR},
      </if>
      <if test="enjoycardnumber != null">
        #{enjoycardnumber,jdbcType=VARCHAR},
      </if>
      <if test="enjoycardtype != null">
        #{enjoycardtype,jdbcType=VARCHAR},
      </if>
      <if test="enjoyemail != null">
        #{enjoyemail,jdbcType=VARCHAR},
      </if>
      <if test="enjoylink != null">
        #{enjoylink,jdbcType=VARCHAR},
      </if>
      <if test="enjoyname != null">
        #{enjoyname,jdbcType=VARCHAR},
      </if>
      <if test="enjoynumber != null">
        #{enjoynumber,jdbcType=VARCHAR},
      </if>
      <if test="enjoysex != null">
        #{enjoysex,jdbcType=INTEGER},
      </if>
      <if test="orderbirthday != null">
        #{orderbirthday,jdbcType=VARCHAR},
      </if>
      <if test="ordercardnumber != null">
        #{ordercardnumber,jdbcType=VARCHAR},
      </if>
      <if test="ordercardtype != null">
        #{ordercardtype,jdbcType=VARCHAR},
      </if>
      <if test="orderemail != null">
        #{orderemail,jdbcType=VARCHAR},
      </if>
      <if test="ordername != null">
        #{ordername,jdbcType=VARCHAR},
      </if>
      <if test="ordernumber != null">
        #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="ordersex != null">
        #{ordersex,jdbcType=INTEGER},
      </if>
      <if test="usenumber != null">
        #{usenumber,jdbcType=VARCHAR},
      </if>
      <if test="xianenddate != null">
        #{xianenddate,jdbcType=VARCHAR},
      </if>
      <if test="xianname != null">
        #{xianname,jdbcType=VARCHAR},
      </if>
      <if test="xianstartdate != null">
        #{xianstartdate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.entity.InsuranceexchangeExample" resultType="java.lang.Long">
    select count(*) from insuranceexchange
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update insuranceexchange
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=VARCHAR},
      </if>
      <if test="record.enjoybirthday != null">
        enjoyBirthday = #{record.enjoybirthday,jdbcType=VARCHAR},
      </if>
      <if test="record.enjoycardnumber != null">
        enjoyCardNumber = #{record.enjoycardnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.enjoycardtype != null">
        enjoyCardType = #{record.enjoycardtype,jdbcType=VARCHAR},
      </if>
      <if test="record.enjoyemail != null">
        enjoyEmail = #{record.enjoyemail,jdbcType=VARCHAR},
      </if>
      <if test="record.enjoylink != null">
        enjoyLink = #{record.enjoylink,jdbcType=VARCHAR},
      </if>
      <if test="record.enjoyname != null">
        enjoyName = #{record.enjoyname,jdbcType=VARCHAR},
      </if>
      <if test="record.enjoynumber != null">
        enjoyNumber = #{record.enjoynumber,jdbcType=VARCHAR},
      </if>
      <if test="record.enjoysex != null">
        enjoySex = #{record.enjoysex,jdbcType=INTEGER},
      </if>
      <if test="record.orderbirthday != null">
        orderBirthday = #{record.orderbirthday,jdbcType=VARCHAR},
      </if>
      <if test="record.ordercardnumber != null">
        orderCardNumber = #{record.ordercardnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.ordercardtype != null">
        orderCardType = #{record.ordercardtype,jdbcType=VARCHAR},
      </if>
      <if test="record.orderemail != null">
        orderEmail = #{record.orderemail,jdbcType=VARCHAR},
      </if>
      <if test="record.ordername != null">
        orderName = #{record.ordername,jdbcType=VARCHAR},
      </if>
      <if test="record.ordernumber != null">
        orderNumber = #{record.ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="record.ordersex != null">
        orderSex = #{record.ordersex,jdbcType=INTEGER},
      </if>
      <if test="record.usenumber != null">
        useNumber = #{record.usenumber,jdbcType=VARCHAR},
      </if>
      <if test="record.xianenddate != null">
        xianEndDate = #{record.xianenddate,jdbcType=VARCHAR},
      </if>
      <if test="record.xianname != null">
        xianName = #{record.xianname,jdbcType=VARCHAR},
      </if>
      <if test="record.xianstartdate != null">
        xianStartDate = #{record.xianstartdate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update insuranceexchange
    set id = #{record.id,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=VARCHAR},
      enjoyBirthday = #{record.enjoybirthday,jdbcType=VARCHAR},
      enjoyCardNumber = #{record.enjoycardnumber,jdbcType=VARCHAR},
      enjoyCardType = #{record.enjoycardtype,jdbcType=VARCHAR},
      enjoyEmail = #{record.enjoyemail,jdbcType=VARCHAR},
      enjoyLink = #{record.enjoylink,jdbcType=VARCHAR},
      enjoyName = #{record.enjoyname,jdbcType=VARCHAR},
      enjoyNumber = #{record.enjoynumber,jdbcType=VARCHAR},
      enjoySex = #{record.enjoysex,jdbcType=INTEGER},
      orderBirthday = #{record.orderbirthday,jdbcType=VARCHAR},
      orderCardNumber = #{record.ordercardnumber,jdbcType=VARCHAR},
      orderCardType = #{record.ordercardtype,jdbcType=VARCHAR},
      orderEmail = #{record.orderemail,jdbcType=VARCHAR},
      orderName = #{record.ordername,jdbcType=VARCHAR},
      orderNumber = #{record.ordernumber,jdbcType=VARCHAR},
      orderSex = #{record.ordersex,jdbcType=INTEGER},
      useNumber = #{record.usenumber,jdbcType=VARCHAR},
      xianEndDate = #{record.xianenddate,jdbcType=VARCHAR},
      xianName = #{record.xianname,jdbcType=VARCHAR},
      xianStartDate = #{record.xianstartdate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.Insuranceexchange">
    update insuranceexchange
    <set>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="enjoybirthday != null">
        enjoyBirthday = #{enjoybirthday,jdbcType=VARCHAR},
      </if>
      <if test="enjoycardnumber != null">
        enjoyCardNumber = #{enjoycardnumber,jdbcType=VARCHAR},
      </if>
      <if test="enjoycardtype != null">
        enjoyCardType = #{enjoycardtype,jdbcType=VARCHAR},
      </if>
      <if test="enjoyemail != null">
        enjoyEmail = #{enjoyemail,jdbcType=VARCHAR},
      </if>
      <if test="enjoylink != null">
        enjoyLink = #{enjoylink,jdbcType=VARCHAR},
      </if>
      <if test="enjoyname != null">
        enjoyName = #{enjoyname,jdbcType=VARCHAR},
      </if>
      <if test="enjoynumber != null">
        enjoyNumber = #{enjoynumber,jdbcType=VARCHAR},
      </if>
      <if test="enjoysex != null">
        enjoySex = #{enjoysex,jdbcType=INTEGER},
      </if>
      <if test="orderbirthday != null">
        orderBirthday = #{orderbirthday,jdbcType=VARCHAR},
      </if>
      <if test="ordercardnumber != null">
        orderCardNumber = #{ordercardnumber,jdbcType=VARCHAR},
      </if>
      <if test="ordercardtype != null">
        orderCardType = #{ordercardtype,jdbcType=VARCHAR},
      </if>
      <if test="orderemail != null">
        orderEmail = #{orderemail,jdbcType=VARCHAR},
      </if>
      <if test="ordername != null">
        orderName = #{ordername,jdbcType=VARCHAR},
      </if>
      <if test="ordernumber != null">
        orderNumber = #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="ordersex != null">
        orderSex = #{ordersex,jdbcType=INTEGER},
      </if>
      <if test="usenumber != null">
        useNumber = #{usenumber,jdbcType=VARCHAR},
      </if>
      <if test="xianenddate != null">
        xianEndDate = #{xianenddate,jdbcType=VARCHAR},
      </if>
      <if test="xianname != null">
        xianName = #{xianname,jdbcType=VARCHAR},
      </if>
      <if test="xianstartdate != null">
        xianStartDate = #{xianstartdate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.Insuranceexchange">
    update insuranceexchange
    set createTime = #{createtime,jdbcType=VARCHAR},
      enjoyBirthday = #{enjoybirthday,jdbcType=VARCHAR},
      enjoyCardNumber = #{enjoycardnumber,jdbcType=VARCHAR},
      enjoyCardType = #{enjoycardtype,jdbcType=VARCHAR},
      enjoyEmail = #{enjoyemail,jdbcType=VARCHAR},
      enjoyLink = #{enjoylink,jdbcType=VARCHAR},
      enjoyName = #{enjoyname,jdbcType=VARCHAR},
      enjoyNumber = #{enjoynumber,jdbcType=VARCHAR},
      enjoySex = #{enjoysex,jdbcType=INTEGER},
      orderBirthday = #{orderbirthday,jdbcType=VARCHAR},
      orderCardNumber = #{ordercardnumber,jdbcType=VARCHAR},
      orderCardType = #{ordercardtype,jdbcType=VARCHAR},
      orderEmail = #{orderemail,jdbcType=VARCHAR},
      orderName = #{ordername,jdbcType=VARCHAR},
      orderNumber = #{ordernumber,jdbcType=VARCHAR},
      orderSex = #{ordersex,jdbcType=INTEGER},
      useNumber = #{usenumber,jdbcType=VARCHAR},
      xianEndDate = #{xianenddate,jdbcType=VARCHAR},
      xianName = #{xianname,jdbcType=VARCHAR},
      xianStartDate = #{xianstartdate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>